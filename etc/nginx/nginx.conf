user nginx;
worker_processes auto;
#load_module modules/ndk_http_module.so;
#load_module modules/ngx_http_encrypted_session_module.so;
#load_module modules/ngx_http_modsecurity_module.so;
#load_module modules/ngx_http_opentracing_module.so;
load_module modules/ngx_http_js_module.so;
#load_module modules/ngx_stream_js_module.so;
#load_module modules/ngx_http_headers_more_filter_module.so;


pid        /var/run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
  worker_connections 1024;
  use epoll;
  multi_accept on;
  accept_mutex off;
}

http {
  server_tokens on;
  #more_clear_headers Server;
  #keyval_zone zone=denylist:4M;
  #keyval $remote_addr $num_failures zone=denylist;

  client_max_body_size 0;
  # limit the number of connections per single IP
  #limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
  # limit the number of requests for a given session
  #limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=20r/s;
  
  # cache informations about FDs, frequently accessed files
  #open_file_cache max=200000 inactive=20s;
  #open_file_cache_valid 30s;
  #open_file_cache_min_uses 2;
  #open_file_cache_errors on;
  
  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;
  
  # don't buffer data sent, good for small data bursts in real time
  tcp_nodelay on;
  
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
  # correlation for WAF
  log_format extended '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" $request_id';

  log_format upstream_time '$remote_addr - $remote_user [$time_local] ' 
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent"'
                           'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
  
  #js_import /usr/share/nginx-plus-module-prometheus/prometheus.js;
  ssl_session_cache   shared:SSL:10m;
  ssl_session_timeout 10m;
  sendfile on;
  keepalive_timeout  65;
  subrequest_output_buffer_size 32k;
  gzip on;
  # gzip_static on;
  gzip_min_length 10240;
  gzip_comp_level 1;
  gzip_vary on;
  gzip_disable msie6;
  gzip_proxied expired no-cache no-store private auth;
  
  js_import js/utils.js;
  js_set $version utils.version;

  include /etc/nginx/conf.d/*.conf;
}

